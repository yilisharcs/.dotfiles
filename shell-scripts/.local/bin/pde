#!/usr/bin/env bash

GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

sudo apt update && sudo apt upgrade -y
sudo apt install -y curl git

THIRD_PARTY_PKG=(
  brave-browser
  nushell
)

GPG_KEYS=(
  "/usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg brave-browser-release"
  "/usr/share/keyrings/fury-nushell.gpg https://apt.fury.io/nushell/gpg.key fury-nushell"
)

gpg_status=0

echo -e "${BLUE}==> Updating GPG keys and source lists...${NC}"

for key_data in "${GPG_KEYS[@]}"; do
  IFS=' ' read -r keyring_file key_url source_name <<< "$key_data"
  unset IFS

  echo -e "${BLUE}==> Processing key from '$key_url' to '$keyring_file'...${NC}"

  if [ ! -f "$keyring_file" ]; then
    echo -e "${BLUE}==> Keyring file '$keyring_file' does not exist. Downloading...${NC}"
    if [[ "$key_url" == *.key ]]; then
      echo -e "${BLUE}==> URL ends with '.key', de-armoring...${NC}"
      if curl -fsSL "$key_url" | sudo gpg --dearmor -o "$keyring_file"; then
        echo -e "${GREEN} -> Key downloaded and de-armored successfully to '$keyring_file'.${NC}"
      else
        echo -e "${RED} -> Error downloading or de-armoring key from '$key_url'.${NC}"
        gpg_status=1
      fi
    else
      echo -e "${BLUE}==> Downloading key directly...${NC}"
      if curl -fsSLo "$keyring_file" "$key_url"; then
        echo -e "${GREEN} -> Key downloaded successfully to '$keyring_file'.${NC}"
      else
        echo -e "${RED} -> Error downloading key from '$key_url'.${NC}"
        gpg_status=1
      fi
    fi
  else
    echo -e "${GREEN} -> Keyring file '$keyring_file' already exists.${NC}"
  fi

  repo_url=$(dirname "$key_url")
  sources_file="/etc/apt/sources.list.d/${source_name}.sources"
  output=$(cat <<END
Types: deb
URIs: $repo_url
$(if [[ "$repo_url" == *"apt.fury.io"* ]]; then
  echo "Suites: /"
else
  echo "Suites: stable"
  echo "Components: main"
  echo "Signed-By: $keyring_file"
fi)
END
)
  echo -e "${GREEN} -> Created sources file: $sources_file with URI: $repo_url${NC}"
done

echo -e "${BLUE}==> Updating package list and upgrading all installed packages...${NC}"
if sudo apt update && sudo apt upgrade -y; then
  echo -e "${GREEN} -> Package list updated and all installed packages upgraded successfully.${NC}"
  echo -e "${BLUE}==> Installing specified packages from repositories...${NC}"
  if [ "$gpg_status" -eq 0 ]; then
    echo -e "${BLUE}==> Installing third-party packages...${NC}"
    sudo apt install -y "${THIRD_PARTY_PKG[@]}"
  else
    echo -e "${RED} -> Error installing packages. Some packages may not have been installed.${NC}"
  fi
else
  echo -e "${RED} -> Error updating package list. Exiting...${NC}"
  exit 1
fi

if [ ! -f "$HOME/.dotfiles/Makefile" ]; then
  git clone https://github.com/yilisharcs/.dotfiles $HOME/.dotfiles
fi

nu -c "source $HOME/.dotfiles/shell-scripts/.local/bin/pde-setup.nu"

exit 0
