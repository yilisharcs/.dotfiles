# Basic Settings
set hidden true
set ignorecase true
set icons true
set drawbox true
set mouse true
set ratios '8:9'
set shell sh
set shellopts '-eu'
set scrolloff 2
set errorfmt "\033[7;31;48;1m"
set ifs "\n"
set cursorpreviewfmt "\033[7;90m"

# show the result of execution of previous commands
map ` !true

# execute current file (must be executable)
map x $$f
# map X !$f

cmd open &{{
  case $(file --mime-type -Lb $f) in
    text/*) lf -remote "send $id \$$EDITOR \$fx";;
    inode/x-empty) lf -remote "send $id \$$EDITOR \$fx";;
    application/javascript) lf -remote "send $id \$$EDITOR \$fx";;
    application/json) lf -remote "send $id \$$EDITOR \$fx";;
    *) for f in $fx; do $OPENER $f &> /dev/null & done;;
  esac
}}

cmd mimetype %{{
  file -bi $f
}}

# Requires oil.nvim
cmd oilrename ${{
  nvim .
}}

cmd deeptouch %{{
  mkdir -p $(dirname "$1") && touch "$1"
}}

cmd mkdir %{{
  mkdir -p "$1"
}}

cmd mkbak ${{
  cp -nr $f $f.bak
}}

cmd copyfilepath &{{
  echo $f | wl-copy
}}

cmd copyfilename &{{
  echo $f | awk -F '/' '{print $NF}' | wl-copy
}}

cmd followsymlink %{{
  lf -remote "send ${id} select '$(readlink $f)'"
}}

# yy (copy), P for soft-symlink
# yd (cut), P for hard-symlink
cmd symlink %{{
  set -- $(cat ~/.local/share/lf/files)
  mode="$1"
  shift
  if [ "$#" -lt 1 ]; then
    lf -remote "send $id echo no files to symlink"
    exit 0
  fi
  case "$mode" in
    # symbolically copy mode is indicating a soft symlink
    copy) ln -sr -t . -- "$@";;
    # while a move mode is indicating a hard symlink
    move) ln -t . -- "$@";;
  esac
  rm ~/.local/share/lf/files
  lf -remote "send clear"
}}

######### INTEGRATIONS ##########

# Atool
cmd extract ${{
  set -f
  aunpack $f
}}
cmd tar-gz %{{
  apack $1.tar.gz $fx
}}
cmd gzip %{{
  apack $1.gz $fx
}}
cmd zip %{{
  apack $1.zip $fx
}}

# File previewer
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

cmd fuzzyfind ${{
  lf -remote "send $id select \"$(fzf)\""
}}

# Trash-cli
cmd dotrash %{{
  trash-put $fx
}}
cmd untrash ${{
  FZF_DEFAULT_OPTS=""
  file="$(trash-list | grep "$(pwd)" | fzf | awk '{$1=$2=""; print substr($0,3)}')"
  [ -z "$file" ] && exit 1
  yes 0 | trash-restore "$file"
}}

cmd zoxide ${{
  result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
  lf -remote "send $id cd \"$result\""
}}

########### MAPPINGS ############

# Remove Original Mappings
map <space>
map d
map D
map f
map y

# Functions
map <enter> open
map <tab> $$PAGER "$f"
map <c-r> reload
map C :unselect; clear
map dd dotrash
map fd fuzzyfind
map ff find
map gL followsymlink
map i push :deeptouch<space>
map I push :mkdir<space>
map p :paste; clear
map P :symlink
map R oilrename
map w $$SHELL
map U untrash
map v :toggle; down
map V invert
map yd cut
map yn copyfilename
map yp copyfilepath
map yy copy
map zb mkbak
map zca push :tar-gz<space>
map zcd push :zip<space>
map zcs push :gzip<space>
map ze extract
map zm mimetype
map zz zoxide

# CD Shortcuts
map g/ cd /
map gb cd ~/notes
map gc cd ~/.dotfiles
map gd cd ~/Downloads
map gi cd ~/Pictures
map gm cd ~/Music
map gn cd ~/.dotfiles/nvim/.config/nvim
map go cd ~/opt
map gp cd ~/projects
map gr cd ~/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f
map gs cd ~/stow
map gz cd ~/.local/share/nvim/lazy
